{
  "version": 3,
  "sources": ["../../react-hot-toast/src/core/types.ts", "../../react-hot-toast/src/core/utils.ts", "../../react-hot-toast/src/core/store.ts", "../../react-hot-toast/src/core/toast.ts", "../../react-hot-toast/src/core/use-toaster.ts", "../../react-hot-toast/src/headless/index.ts"],
  "sourcesContent": ["import { CSSProperties } from 'react';\n\nexport type ToastType = 'success' | 'error' | 'loading' | 'blank' | 'custom';\nexport type ToastPosition =\n  | 'top-left'\n  | 'top-center'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-center'\n  | 'bottom-right';\n\nexport type Renderable = JSX.Element | string | null;\n\nexport interface IconTheme {\n  primary: string;\n  secondary: string;\n}\n\nexport type ValueFunction<TValue, TArg> = (arg: TArg) => TValue;\nexport type ValueOrFunction<TValue, TArg> =\n  | TValue\n  | ValueFunction<TValue, TArg>;\n\nconst isFunction = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>\n): valOrFunction is ValueFunction<TValue, TArg> =>\n  typeof valOrFunction === 'function';\n\nexport const resolveValue = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>,\n  arg: TArg\n): TValue => (isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction);\n\nexport interface Toast {\n  type: ToastType;\n  id: string;\n  message: ValueOrFunction<Renderable, Toast>;\n  icon?: Renderable;\n  duration?: number;\n  pauseDuration: number;\n  position?: ToastPosition;\n\n  ariaProps: {\n    role: 'status' | 'alert';\n    'aria-live': 'assertive' | 'off' | 'polite';\n  };\n\n  style?: CSSProperties;\n  className?: string;\n  iconTheme?: IconTheme;\n\n  createdAt: number;\n  visible: boolean;\n  height?: number;\n}\n\nexport type ToastOptions = Partial<\n  Pick<\n    Toast,\n    | 'id'\n    | 'icon'\n    | 'duration'\n    | 'ariaProps'\n    | 'className'\n    | 'style'\n    | 'position'\n    | 'iconTheme'\n  >\n>;\n\nexport type DefaultToastOptions = ToastOptions & {\n  [key in ToastType]?: ToastOptions;\n};\n\nexport interface ToasterProps {\n  position?: ToastPosition;\n  toastOptions?: DefaultToastOptions;\n  reverseOrder?: boolean;\n  gutter?: number;\n  containerStyle?: React.CSSProperties;\n  containerClassName?: string;\n  children?: (toast: Toast) => JSX.Element;\n}\n\nexport interface ToastWrapperProps {\n  id: string;\n  className?: string;\n  style?: React.CSSProperties;\n  onHeightUpdate: (id: string, height: number) => void;\n  children?: React.ReactNode;\n}\n", "export const genId = (() => {\n  let count = 0;\n  return () => {\n    return (++count).toString();\n  };\n})();\n\nexport const prefersReducedMotion = (() => {\n  // Cache result\n  let shouldReduceMotion: boolean | undefined = undefined;\n\n  return () => {\n    if (shouldReduceMotion === undefined && typeof window !== 'undefined') {\n      const mediaQuery = matchMedia('(prefers-reduced-motion: reduce)');\n      shouldReduceMotion = !mediaQuery || mediaQuery.matches;\n    }\n    return shouldReduceMotion;\n  };\n})();\n", "import { useEffect, useState } from 'react';\nimport { DefaultToastOptions, Toast, ToastType } from './types';\n\nconst TOAST_LIMIT = 20;\n\nexport enum ActionType {\n  ADD_TOAST,\n  UPDATE_TOAST,\n  UPSERT_TOAST,\n  DISMISS_TOAST,\n  REMOVE_TOAST,\n  START_PAUSE,\n  END_PAUSE,\n}\n\ntype Action =\n  | {\n      type: ActionType.ADD_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPSERT_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPDATE_TOAST;\n      toast: Partial<Toast>;\n    }\n  | {\n      type: ActionType.DISMISS_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.REMOVE_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.START_PAUSE;\n      time: number;\n    }\n  | {\n      type: ActionType.END_PAUSE;\n      time: number;\n    };\n\ninterface State {\n  toasts: Toast[];\n  pausedAt: number | undefined;\n}\n\nconst toastTimeouts = new Map<Toast['id'], ReturnType<typeof setTimeout>>();\n\nexport const TOAST_EXPIRE_DISMISS_DELAY = 1000;\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: ActionType.REMOVE_TOAST,\n      toastId: toastId,\n    });\n  }, TOAST_EXPIRE_DISMISS_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nconst clearFromRemoveQueue = (toastId: string) => {\n  const timeout = toastTimeouts.get(toastId);\n  if (timeout) {\n    clearTimeout(timeout);\n  }\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case ActionType.UPDATE_TOAST:\n      //  ! Side effects !\n      if (action.toast.id) {\n        clearFromRemoveQueue(action.toast.id);\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case ActionType.UPSERT_TOAST:\n      const { toast } = action;\n      return state.toasts.find((t) => t.id === toast.id)\n        ? reducer(state, { type: ActionType.UPDATE_TOAST, toast })\n        : reducer(state, { type: ActionType.ADD_TOAST, toast });\n\n    case ActionType.DISMISS_TOAST:\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be execrated into a dismissToast() action, but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                visible: false,\n              }\n            : t\n        ),\n      };\n    case ActionType.REMOVE_TOAST:\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n\n    case ActionType.START_PAUSE:\n      return {\n        ...state,\n        pausedAt: action.time,\n      };\n\n    case ActionType.END_PAUSE:\n      const diff = action.time - (state.pausedAt || 0);\n\n      return {\n        ...state,\n        pausedAt: undefined,\n        toasts: state.toasts.map((t) => ({\n          ...t,\n          pauseDuration: t.pauseDuration + diff,\n        })),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [], pausedAt: undefined };\n\nexport const dispatch = (action: Action) => {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n};\n\nexport const defaultTimeouts: {\n  [key in ToastType]: number;\n} = {\n  blank: 4000,\n  error: 4000,\n  success: 2000,\n  loading: Infinity,\n  custom: 4000,\n};\n\nexport const useStore = (toastOptions: DefaultToastOptions = {}): State => {\n  const [state, setState] = useState<State>(memoryState);\n  useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  const mergedToasts = state.toasts.map((t) => ({\n    ...toastOptions,\n    ...toastOptions[t.type],\n    ...t,\n    duration:\n      t.duration ||\n      toastOptions[t.type]?.duration ||\n      toastOptions?.duration ||\n      defaultTimeouts[t.type],\n    style: {\n      ...toastOptions.style,\n      ...toastOptions[t.type]?.style,\n      ...t.style,\n    },\n  }));\n\n  return {\n    ...state,\n    toasts: mergedToasts,\n  };\n};\n", "import {\n  Renderable,\n  Toast,\n  ToastOptions,\n  ToastType,\n  DefaultToastOptions,\n  ValueOrFunction,\n  resolveValue,\n} from './types';\nimport { genId } from './utils';\nimport { dispatch, ActionType } from './store';\n\ntype Message = ValueOrFunction<Renderable, Toast>;\n\ntype ToastHandler = (message: Message, options?: ToastOptions) => string;\n\nconst createToast = (\n  message: Message,\n  type: ToastType = 'blank',\n  opts?: ToastOptions\n): Toast => ({\n  createdAt: Date.now(),\n  visible: true,\n  type,\n  ariaProps: {\n    role: 'status',\n    'aria-live': 'polite',\n  },\n  message,\n  pauseDuration: 0,\n  ...opts,\n  id: opts?.id || genId(),\n});\n\nconst createHandler =\n  (type?: ToastType): ToastHandler =>\n  (message, options) => {\n    const toast = createToast(message, type, options);\n    dispatch({ type: ActionType.UPSERT_TOAST, toast });\n    return toast.id;\n  };\n\nconst toast = (message: Message, opts?: ToastOptions) =>\n  createHandler('blank')(message, opts);\n\ntoast.error = createHandler('error');\ntoast.success = createHandler('success');\ntoast.loading = createHandler('loading');\ntoast.custom = createHandler('custom');\n\ntoast.dismiss = (toastId?: string) => {\n  dispatch({\n    type: ActionType.DISMISS_TOAST,\n    toastId,\n  });\n};\n\ntoast.remove = (toastId?: string) =>\n  dispatch({ type: ActionType.REMOVE_TOAST, toastId });\n\ntoast.promise = <T>(\n  promise: Promise<T>,\n  msgs: {\n    loading: Renderable;\n    success: ValueOrFunction<Renderable, T>;\n    error: ValueOrFunction<Renderable, any>;\n  },\n  opts?: DefaultToastOptions\n) => {\n  const id = toast.loading(msgs.loading, { ...opts, ...opts?.loading });\n\n  promise\n    .then((p) => {\n      toast.success(resolveValue(msgs.success, p), {\n        id,\n        ...opts,\n        ...opts?.success,\n      });\n      return p;\n    })\n    .catch((e) => {\n      toast.error(resolveValue(msgs.error, e), {\n        id,\n        ...opts,\n        ...opts?.error,\n      });\n    });\n\n  return promise;\n};\n\nexport { toast };\n", "import { useEffect, useCallback } from 'react';\nimport { dispatch, ActionType, useStore } from './store';\nimport { toast } from './toast';\nimport { DefaultToastOptions, Toast, ToastPosition } from './types';\n\nconst updateHeight = (toastId: string, height: number) => {\n  dispatch({\n    type: ActionType.UPDATE_TOAST,\n    toast: { id: toastId, height },\n  });\n};\nconst startPause = () => {\n  dispatch({\n    type: ActionType.START_PAUSE,\n    time: Date.now(),\n  });\n};\n\nexport const useToaster = (toastOptions?: DefaultToastOptions) => {\n  const { toasts, pausedAt } = useStore(toastOptions);\n\n  useEffect(() => {\n    if (pausedAt) {\n      return;\n    }\n\n    const now = Date.now();\n    const timeouts = toasts.map((t) => {\n      if (t.duration === Infinity) {\n        return;\n      }\n\n      const durationLeft =\n        (t.duration || 0) + t.pauseDuration - (now - t.createdAt);\n\n      if (durationLeft < 0) {\n        if (t.visible) {\n          toast.dismiss(t.id);\n        }\n        return;\n      }\n      return setTimeout(() => toast.dismiss(t.id), durationLeft);\n    });\n\n    return () => {\n      timeouts.forEach((timeout) => timeout && clearTimeout(timeout));\n    };\n  }, [toasts, pausedAt]);\n\n  const endPause = useCallback(() => {\n    if (pausedAt) {\n      dispatch({ type: ActionType.END_PAUSE, time: Date.now() });\n    }\n  }, [pausedAt]);\n\n  const calculateOffset = useCallback(\n    (\n      toast: Toast,\n      opts?: {\n        reverseOrder?: boolean;\n        gutter?: number;\n        defaultPosition?: ToastPosition;\n      }\n    ) => {\n      const { reverseOrder = false, gutter = 8, defaultPosition } = opts || {};\n\n      const relevantToasts = toasts.filter(\n        (t) =>\n          (t.position || defaultPosition) ===\n            (toast.position || defaultPosition) && t.height\n      );\n      const toastIndex = relevantToasts.findIndex((t) => t.id === toast.id);\n      const toastsBefore = relevantToasts.filter(\n        (toast, i) => i < toastIndex && toast.visible\n      ).length;\n\n      const offset = relevantToasts\n        .filter((t) => t.visible)\n        .slice(...(reverseOrder ? [toastsBefore + 1] : [0, toastsBefore]))\n        .reduce((acc, t) => acc + (t.height || 0) + gutter, 0);\n\n      return offset;\n    },\n    [toasts]\n  );\n\n  return {\n    toasts,\n    handlers: {\n      updateHeight,\n      startPause,\n      endPause,\n      calculateOffset,\n    },\n  };\n};\n", "import { toast } from '../core/toast';\n\nexport type {\n  DefaultToastOptions,\n  IconTheme,\n  Renderable,\n  Toast,\n  ToasterProps,\n  ToastOptions,\n  ToastPosition,\n  ToastType,\n  ValueFunction,\n  ValueOrFunction,\n} from '../core/types';\n\nexport { resolveValue } from '../core/types';\nexport { useToaster } from '../core/use-toaster';\nexport { useStore as useToasterStore } from '../core/store';\n\nexport { toast };\nexport default toast;\n"],
  "mappings": "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",
  "names": ["import_react", "isFunction", "valOrFunction", "resolveValue", "arg", "genId", "count", "TOAST_LIMIT", "toastTimeouts", "TOAST_EXPIRE_DISMISS_DELAY", "addToRemoveQueue", "toastId", "timeout", "dispatch", "clearFromRemoveQueue", "reducer", "state", "action", "t", "toast", "diff", "listeners", "memoryState", "listener", "defaultTimeouts", "useStore", "toastOptions", "setState", "useState", "useEffect", "index", "mergedToasts", "_a", "_b", "createToast", "message", "type", "opts", "genId", "createHandler", "options", "promise", "msgs", "id", "p", "resolveValue", "e", "updateHeight", "height", "startPause", "useToaster", "toasts", "pausedAt", "now", "timeouts", "durationLeft", "endPause", "useCallback", "calculateOffset", "reverseOrder", "gutter", "defaultPosition", "relevantToasts", "toastIndex", "toastsBefore", "i", "acc", "headless_default"]
}
